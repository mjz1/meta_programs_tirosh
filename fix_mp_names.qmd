---
title: "Fix MP Names"
author: "Matthew Zatzman"
date: "`r Sys.Date()`"
format:
  html: 
    self-contained: true
---


```{r}
#| warning: false
#| message: false
library(tidyverse)
library(readxl)
library(HGNChelper)
```

The Tirosh metaprograms from https://www.nature.com/articles/s41586-023-06130-4 contain several unapproved HGNC names. Here we catalog and fix them.

First load the 10X gene names. If the MP gene names match the 10X names, we keep them.

```{r}
tnx_genes <- read.table("10x_genenames.txt")
```


```{r}
#| warning: false
#| message: false
meta_prog_file <- "meta_programs.xlsx"

meta_progs_fix <- map(excel_sheets(meta_prog_file), .f = function(sheet) {
  df <- read_xlsx(path = meta_prog_file, sheet = sheet) %>%
    janitor::clean_names() %>%
    as.list()
    
  
  res <- map(names(df), .f = function(x) {
    fix <- HGNChelper::checkGeneSymbols(df[[x]])
    fix$ct <- sheet
    fix$mp <- x
    colnames(fix)[1] <- "Gene"
    fix$gene_rank <- 1:nrow(fix)
    return(fix)
  }) %>%
    list_rbind()
  return(res)
}) %>%
  list_rbind()
```


Proportion of genes that do not map

```{r}
prop.table(table(meta_progs_fix$Gene %in% tnx_genes$V1))
```

List of non mapping genes and updated suggestsions labeled by whether or not they are in the 10x gene list

```{r}
meta_progs_fix$orig_in_10x <- meta_progs_fix$Gene %in% tnx_genes$V1

meta_progs_fix$suggest_in_10x <- meta_progs_fix$Suggested.Symbol %in% tnx_genes$V1

filter(meta_progs_fix, !meta_progs_fix$Gene %in% tnx_genes$V1) %>%
  select(Gene, orig_in_10x, Suggested.Symbol, suggest_in_10x) %>%
  distinct() %>%
  arrange(Suggested.Symbol, Gene) %>%
  gt::gt()
```


```{r}
#| include: false
#| eval: false
# Try patching with Seurat function (nothing gets patched)
non_mapped <- filter(meta_progs_fix, is.na(Suggested.Symbol))$Gene %>% unique()

seurat_try <- Seurat::UpdateSymbolList(non_mapped)
```

Filter down to genes that requiring patching

```{r}
gene_patch <- meta_progs_fix %>%
  filter(!Approved) %>%
  select(Gene, Approved, Suggested.Symbol) %>%
  filter(!Gene %in% tnx_genes$V1) %>%
  distinct() %>%
  # Manually patch this gene
  mutate(Suggested.Symbol = case_when(
    Gene == "ZFP385A" ~ "ZNF385A",
    .default = Suggested.Symbol
  )) %>%
  filter(Suggested.Symbol %in% tnx_genes$V1) %>%
  dplyr::rename("Updated_Symbol" = "Suggested.Symbol")
```

Patch the genes

```{r}
# Patch in
meta_progs_fix <- left_join(meta_progs_fix, gene_patch, by = c("Gene", "Approved"))

# Whenever updated is not NA we patch in
meta_progs_fix[!is.na(meta_progs_fix$Updated_Symbol), "Gene"] <- meta_progs_fix[!is.na(meta_progs_fix$Updated_Symbol), "Updated_Symbol"]
```

Updated proportion of unpatched names:

```{r}
prop.table(table(meta_progs_fix$Gene %in% tnx_genes$V1))
```

Save out flat table

```{r}
meta_progs_fix %>%
  dplyr::rename(
         "cell_type" = "ct",
         "meta_program" = "mp"
         ) %>%
  relocate(Gene) %>%
  write.table("tirosh_mp_patched.txt", quote = F, sep = "\t", row.names = F, col.names = T)
```




